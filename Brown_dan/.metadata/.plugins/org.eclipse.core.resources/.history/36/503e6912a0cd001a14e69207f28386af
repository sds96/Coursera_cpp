#include "Bus_and_Stop.h"

using namespace std;

//================== BusStop ===============

std::string BusStop::GetName() const{
		return name;
	}

void BusStop::Read_Stop(istream& is) {
		is.ignore(1);
		getline(is, name, ':');
		is >> coord;
		is.ignore(2);
		string str;
		auto dist = split(str, ", ");
		for (auto& el : dist){
			auto pos = el.find('m');
			double d = stoi(string(el.begin(), pos));
			this->real_distance[]
		}

	}

std::ostream& operator<<(std::ostream& os, const BusStop& stop){
	os << "Bus_Stop:" << '"' << stop.name <<'"' << ". Coordinates: " << stop.coord;
	return os;
};

//================== Bus ===================

void Bus::PrintStops() const {
	for(const auto& stop: route){
		cout << stop << " ";
	}
}

void Bus::Read_Route(istream& is){
	is.ignore(1);
	getline(is, bus_number, ':');
	is.ignore(1);
	string input_line;
	getline(is, input_line);
	if (input_line.find('-') != std::string::npos) {
		route = split(input_line, " - ");
	} else {
		isCircle = true;
		route = split(input_line, " > ");
	}
};
